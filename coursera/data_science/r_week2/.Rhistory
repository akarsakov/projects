getwd()
data = read.csv("hw1_data.csv")
colnames(data)
data[1:2,]
data[152:153,]
data[152:,]
data[152:154,]
data[47,]
head(data[,"Ozone"])
length(data[data[,"Ozone"],"Ozone"])
length(is.na(data[data[,"Ozone"]),"Ozone"])
length(is.na(data[,"Ozone"]),"Ozone"])
length(data[is.na(data[,"Ozone"]),"Ozone"])
ozon = data[, "Ozone"]
is.na(ozon)
mean(ozon)
ozon
mean(ozon, na.rm=TRUE)
sub = data[data["Ozone",] > 31 & data["Temp, "] > 90,]
sub = data[data["Ozone",] > 31 & data["Temp",] > 90,]
sub = data[data["Ozone",] > 31 && data["Temp",] > 90,]
sub = data[data["Ozone",] > 31 & data["Temp",] > 90,]
data["Ozone",] > 31
data["Ozone",]
sub = data[data[,"Ozone"] > 31 & data[,"Temp"] > 90,]
sub
mean(sub[, "Solar.R"], na.rT)
mean(sub[, "Solar.R"], na.rm=T)
sub = data[data[,"Month"] == 6,]
mean(sub[, "Temp"], na.rm=T)
max(data[data[,"Month"] == 5, "Ozone"])
max(data[data[,"Month"] == 5, "Ozone"], na.rm=T)
available.packages()
head(available.packages())
length(available.packages())
library(ggplot2)
search()
version
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
formal(mean)
formals(mean)
args(mean)
args(lm)
args(mean)
UseMethod(mean)
UseMethod("mean")
args(mean)
mean
UseMethod("mean")
ls
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
y
f(3)
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
Y
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(1)
setwd('D:\Dev\git_repos\projects\coursera\data_science\r_week2\specdata')
setwd("D:/Dev/git_repos/projects/coursera/data_science/r_week2/specdata")
data = read.csv("001.csv")
data
head(data)
data$sulfate
mean(data$sulfate)
mean(data$sulfate, na.rm=T)
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
head(data)
index = "sulfate"
head(data$index)
data$index
data[index]
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
warnigs()
warnings()
mean(data["sulfate"])
mean(data["sulfate"], na.rm=T)
data["sulfate"]
mean(data["sulfate"], na.rm=T)
mean(c(data["sulfate"]), na.rm=T)
mean(is.numeric(data["sulfate"]), na.rm=T)
mean(is.numeric(data["nitrate"]), na.rm=T)
head(is.numeric(data["nitrate"]), na.rm=T)
head(is.numeric(data["nitrate"]))
is.numeric(data["nitrate"])
as.numeric(data["nitrate"])
class(data["nitrate"])
class(data["nitrate",])
class(data[,"nitrate"])
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
list.files(".")
list.files("specdta")
list.files("specdata")
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
head(data)
complete.cases(data)
data[complete.cases(data)]
data[complete.cases(data),]
length(data[complete.cases(data),])
ncol(data[complete.cases(data),])
nrow(data[complete.cases(data),])
sum(complete.cases(data),])
sum(complete.cases(data))
complete_cases = c()
id = 1:332
id = 1:2
directory = "specdata"
for (monitor_id in id)
{
monitor_data = read.csv(paste(directory, "/", sprintf("%03d.csv", monitor_id), sep=""))
complete_cases = c(complete_cases, sum(complete.cases(monitor_data)))
}
complete_cases
a = as.data.frame(cbind(id, complete_cases))
a
class(a)
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
cor(monitor_data$sulfate, monitor_data$nitrate, na.rm=T)
compl = monitor_data[complete.cases(monitor_data),]
cors = c(cors, cor(compl$sulfate, compl$nitrate, na.rm=T))
cors = c()
cors = c(cors, cor(compl$sulfate, compl$nitrate, na.rm=T))
cors = c(cors, cor(compl$sulfate, compl$nitrate))
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
length(cr)
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit
submit()
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
submit()
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
source('D:/Dev/git_repos/projects/coursera/data_science/r_week2/script.R')
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
vec = c(1, 2, 3)
cached = makeVector(vec)
cached$getmean
cached$getmean()
cachemean(cached)
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
a = matrix(1:4, ncol=2, nrow=2)
a
inv_a = Solve(a)
inv_a = solve(a)
inv_a
cached = makeCacheMatrix(a)
cacheSolve(cached)
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
cacheSolve(cached)
cacheSolve(cached)
cacheSolve(cached)
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
cached = makeCacheMatrix(a)
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
cached = makeCacheMatrix(a)
cacheSolve(cached)
source('D:/Dev/git_repos/ProgrammingAssignment2/cachematrix.R')
cached = makeCacheMatrix(a)
cached$setMatrix(inv_a)
cacheSolve(cached)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
5+7
x <- 5+7
x
y = x-3
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555, z)
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(1,2,3), times=10)
rep(c(0m1,2), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Alexander")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- smaple(c(y,z), 100)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(x)
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
my_vector
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
